name: Rescrape Invalid JSON Files

on:
  workflow_dispatch:
    inputs:
      run_find_only:
        description: 'Only find invalid files without rescraping'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  find-invalid-json:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          git fetch
          git pull
          python -m pip install --upgrade pip

      - name: Find invalid JSON files
        run: |
          python find_invalid_json.py
          
      - name: Upload invalid files list
        uses: actions/upload-artifact@v4
        with:
          name: invalid-files-list
          path: invalid_files_*.json
          retention-days: 7
          
      - name: git setting
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Commit and Push
        run: |
          git add -N invalid_files_*.json
          if ! git diff --exit-code --quiet
          then
            git add invalid_files_*.json && git commit -m "無効なJSONファイルリストを更新"
            git push origin HEAD:${GITHUB_REF_NAME}
          fi

  rescrape-invalid-json:
    runs-on: ubuntu-latest
    needs: find-invalid-json
    if: ${{ github.event.inputs.run_find_only != 'true' }}
    timeout-minutes: 720
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          git fetch
          git pull
          python -m pip install --upgrade pip
          pip install chromedriver-binary
          pip install selenium==4.2.0

      - name: Download invalid files list
        uses: actions/download-artifact@v4
        with:
          name: invalid-files-list
          
      - name: Rescrape invalid JSON files
        run: |
          # 最新の無効ファイルリストを取得
          LATEST_FILE=$(ls -t invalid_files_*.json | head -1)
          echo "Using file: $LATEST_FILE"
          python rescrape_invalid.py $LATEST_FILE
          
      - name: git setting
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Commit and Push
        run: |
          git add -N docs/all/*.json rescrape_failures.log
          if ! git diff --exit-code --quiet
          then
            git add docs/all/*.json rescrape_failures.log
            git commit -m "無効なJSONファイルを再スクレイピング"
            git push origin HEAD:${GITHUB_REF_NAME}
          fi
