{"履修期": "春学期", "主な教授言語": "日本語", "授業目的": "この授業では、学生はPythonの基本文法から始まり、データ構造、制御構造、関数、エラー処理などの基本的なプログラミング概念を学びます。学生は、小規模ながら実践的な問題を解決できる能力を養うことを目指します。余裕があれば、機械学習や意思決定やデータ構造やアルゴリズムの基礎を扱います。", "到達目標": "Pythonプログラミング言語の基本文法と構造を理解し、適切に使用できる基本的なデータ型、制御構造、関数、モジュールを使って問題を解決する能力を習得する。ファイルの操作、例外処理、オブジェクト指向プログラミングの基本を学ぶ。論理的思考能力と問題解決能力を養い、プログラミングにおける効率的なアプローチを身につける。意思決定への応用", "特記事項": "", "関連科目": "", "授業の概要・背景": "意思決定にはAI技術が必要であり、そこで使われるプログラミング言語はPythonである<div><br /></div><div><div>Pythonの基本文法回りで終わる可能性が高いです</div><div><br /></div><div><br /></div><div><div>特定のプログラム言語を学ぶことに意味があるというよりも、プログラミング的な考え方を学ぶことに意味があるので言語選択自体に本質的な意味はありません。（Haskellなどの特殊な言語を除く）</div><div><br /></div><div>LLMを使用することを認める方針です。</div><div>LLMで人間ができることは拡張されていきます。むしろそれを使っても良いのでどこまでできるかが大事です。ただ、現状ではLLMの出力を人間がある程度チェックしないといけないので、プログラミングの知識は必要です。完璧なコードはまだ書いてもらえません。未来がどうなるかはわかりません。放っておいても学生は使いますし、だったら使用を許可してそれを前提にしてその代わりより高みを目指してもらう方が良いと考えています。</div><div><br /></div></div><div><br /></div></div>", "授業方法": "授業中にプログラミングをして学びます自転車の乗り方を学ぶようなものです講義ではなく演習です基本的にLLMでコーディングしても良いという方針でやります", "トピック": {"授業計画1": "<div><div>文字数が長くて書けないというエラーが出てしまったので、仕方なく備考欄に書くことにしました</div></div><div><br /></div>", "授業外学習2": "自分でプログラミングで遊ぶことが望ましい<div>興味がある方は競技プログラミングに挑戦してみては？</div>"}, "評価": {"参考文献・資料/Reference books0": ["以下にオンライン教材を書きましたこの分野は進展が早いので、これが読まれるころには時代遅れになっているかもしれませんプログラミング言語の基礎的学習はあまり変わりませんが、深層学習は変化が早いです\nhttps://colab.research.google.com/github/utokyo-ipp/utokyo-ipp.github.io/blob/master/colab/index.ipynb\nhttps://www.python.jp/train/index.html\n\nhttps://repository.kulib.kyoto-u.ac.jp/dspace/bitstream/2433/265459/1/Version2021_10_08_01.pdfhttps://repository.kulib.kyoto-u.ac.jp/dspace/bitstream/2433/265459/1/Version2021_10_08_01.pdf\n\n 以下にオンライン教材を書きましたこの分野は進展が早いので、これが読まれるころには時代遅れになっているかもしれませんプログラミング言語の基礎的学習はあまり変わりませんが、深層学習は変化が早いです\nhttps://colab.research.google.com/github/utokyo-ipp/utokyo-ipp.github.io/blob/master/colab/index.ipynb\nhttps://www.python.jp/train/index.html\n\nhttps://repository.kulib.kyoto-u.ac.jp/dspace/bitstream/2433/265459/1/Version2021_10_08_01.pdfhttps://repository.kulib.kyoto-u.ac.jp/dspace/bitstream/2433/265459/1/Version2021_10_08_01.pdf\n\">"], "成績評価Grading0": ["種別　Type備考　Note", "割合　Percentage", "評価基準等　Grading Criteria etc."], "成績評価Grading1": ["授業中試験／In-class examination (03)", "", ""], "成績評価Grading2": ["平常リポート／Individual reports (04)", "", ""], "成績評価Grading3": ["プレゼンテーション・発表／Presentation (07)", "", ""], "成績評価Grading4": ["授業への参加度（自発性、積極性、主体性、等）／In-class participation,contribution (09)", "", ""], "成績評価Grading5": ["その他／Others (99)", "100 %", "下記参照"], "成績評価Grading6": ["備考　Note 授業参加と授業内課題・演習・演習試験・授業内に終わらなかったら授業外課題になる（要は宿題になる）を使用して評価する人数が多い場合にはGithubClassroomの自動採点を使用する"], "備考Note0": ["（各回ごとの計画設定が難しい場合のみ記入してください。の箇所が字数制限で書けないので、仕方なくここに記入しました）\n原則として14回すべて対面授業で実施。以下は参考です。実際には学生の理解度を見ながら進めていくので、次の通りには内容も進度も進まないと考えてください。学生の理解度を無視して進めても無意味です。どのようなことを学ぶのか程度の参考に留めてください。余裕があったらPytorchなどの機械学習や意思決定などを取り扱います\n&nbsp; - Python環境のセットアップ&nbsp; - 基本的な文法と構文\n- データ型と変数&nbsp; - データ型（整数、浮動小数点数、文字列、リストなど）&nbsp; - 変数の宣言と代入&nbsp; - 基本的な演算\n- 制御構造&nbsp; - 条件文（if文）&nbsp; - 繰り返し文（for文、while文）\n- Githubの使い方\n- 関数の定義と利用&nbsp; - 関数の定義と引数&nbsp; - 戻り値とスコープ&nbsp; - ラムダ式\n- コレクションデータ型&nbsp; - リストとタプル&nbsp; - 辞書とセット&nbsp; - コレクションの操作とメソッド\n- 文字列の操作&nbsp; - 文字列の基本操作&nbsp; - 文字列メソッド&nbsp; - 文字列フォーマット\n- ファイル操作と例外処理&nbsp; - ファイルの読み書き&nbsp; - 例外処理の基本\n- モジュールとパッケージ&nbsp; - モジュールのインポート&nbsp; - 標準ライブラリの使用&nbsp; - サードパーティのパッケージ\n- オブジェクト指向プログラミングの基礎&nbsp; - クラスとオブジェクト&nbsp; - インスタンスメソッド、クラスメソッド、静的メソッド&nbsp; - 継承と多様性\n- データ分析の基本&nbsp; - NumPyとPandasの基本&nbsp; - データの操作と処理&nbsp; - シンプルなデータ分析\n- 機械学習の基礎&nbsp; - 機械学習の概念と用途&nbsp; - 教師あり学習と教師なし学習の違い&nbsp; - 簡単な機械学習モデルの構築と評価&nbsp; - Pythonの機械学習ライブラリ（Scikit-learn, Pytorchなど）の基本的な使用方法&nbsp; - 意思決定\n- データ構造の詳細&nbsp; - リスト、タプル、辞書、セットの詳細な操作&nbsp; - コレクションデータ型の応用&nbsp; - データ構造とアルゴリズムの基本\n- Pythonにおけるエラー処理&nbsp; - エラーと例外の種類&nbsp; - 例外処理の書き方&nbsp; - カスタム例外の作成と使用\n- LLMによるコーディング\n- 独自のプロジェクト"], "備考Note1": ["2024年11月27日 19時44分19秒"], "項番No.0": [], "項番No.1": ["2025年度", "春学期／Spring", "木曜３時限／Thursday 3", "春学期／Spring", "ＩＩ－１１２"]}, "campas": 1, "name": "【200】メディア制作演習（意思決定）／Seminar in Media Work (Decision Making)", "管理部署": 7, "単位数": 2, "担当者": "紺野　友彦（KONNO TOMOHIKO） ", "履修基準年度": "２年", "履修登録方法": "申込制", "緊急授業形態": 0, "開講期": 1, "時限1": 23, "評価1": 2, "評価2": 3, "評価3": 4, "評価4": 5, "評価5": 6, "成績評価備考": "備考　Note\n授業参加と授業内課題・演習・演習試験・授業内に終わらなかったら授業外課題になる（要は宿題になる）を使用して評価する\n\n人数が多い場合にはGithubClassroomの自動採点を使用する"}